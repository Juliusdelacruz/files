AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template creates a Multi-AZ, multi-subnet VPC infrastructure with managed
  NAT gateways in the public subnet for each Availability Zone. 
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Availability Zone Configuration
        Parameters:
          - AvailabilityZones
          - NumberOfAZs
      - Label:
          default: Network Configuration
        Parameters:
          - VPCCIDR
          - VPCTenancy
          - VPCName
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      NumberOfAZs:
        default: Number of Availability Zones
      VPCCIDR:
        default: VPC CIDR
      VPCTenancy:
        default: VPC Tenancy
Parameters:
  AvailabilityZones:
    Description: >-
      List of Availability Zones to use for the subnets in the VPC. Note: The
      logical order is preserved.
    Type: 'List<AWS::EC2::AvailabilityZone::Name>'
  NumberOfAZs:
    AllowedValues:
      - '2'
      - '3'
      - '4'
    Default: '2'
    Description: >-
      Number of Availability Zones to use in the VPC. This must match your
      selections in the list of Availability Zones parameter.
    Type: String
  VPCCIDR:
    AllowedPattern: >-
      ^([0-9]{1,3}\.){2}([0]{1}\.)([0]{1})(\/([1][6]))?$
    ConstraintDescription: CIDR block parameter must be in the form x.x.0.0/16
    Description: CIDR block parameter must be in the form x.x.0.0/16
    Type: String
  VPCTenancy:
    AllowedValues:
      - default
      - dedicated
    Default: default
    Description: The allowed tenancy of instances launched into the VPC
    Type: String
  VPCName:
    Type: String
Conditions:
  NVirginiaRegionCondition: !Equals 
    - !Ref 'AWS::Region'
    - us-east-1
Mappings: 
  CIDRGen: 
    Private: 
      Subnet1: "1.0/24"
      Subnet2: "2.0/24"
    Public: 
      Subnet1: "3.0/24"
      Subnet2: "4.0/24"

Resources:
  DHCPOptions:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      DomainName: !If 
        - NVirginiaRegionCondition
        - ec2.internal
        - !Join 
          - ''
          - - !Ref 'AWS::Region'
            - .compute.internal
      DomainNameServers:
        - AmazonProvidedDNS
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDR
      InstanceTenancy: !Ref VPCTenancy
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: !Ref 'VPCName'
  VPCDHCPOptionsAssociation:
    Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
    Properties:
      VpcId: !Ref VPC
      DhcpOptionsId: !Ref DHCPOptions
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Network
          Value: Public
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PrivateSubnet1A:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Join
        - '.'
        - - !Select ["0", !Split [".", {"Ref" : "VPCCIDR"}]]
          - !Select ["1", !Split [".", {"Ref" : "VPCCIDR"}]]
          - Fn::FindInMap: [ CIDRGen, Private, Subnet1 ]
      AvailabilityZone: !Select 
        - '0'
        - !Ref AvailabilityZones
      Tags: 
        - Key: Name
          Value: {"Fn::Join" : [" ", [{"Ref" : "VPCName"}, "Private subnet 1A"]]}
        - Key: Network  
          Value: Private        
  PrivateSubnet2A:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Join
        - '.'
        - - !Select ["0", !Split [".", {"Ref" : "VPCCIDR"}]]
          - !Select ["1", !Split [".", {"Ref" : "VPCCIDR"}]]
          - Fn::FindInMap: [ CIDRGen, Private, Subnet2 ]
      AvailabilityZone: !Select 
        - '1'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: {"Fn::Join" : [" ", [{"Ref" : "VPCName"}, "Private subnet 2A"]]}
        - Key: Network
          Value: Private
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Join
        - '.'
        - - !Select ["0", !Split [".", {"Ref" : "VPCCIDR"}]]
          - !Select ["1", !Split [".", {"Ref" : "VPCCIDR"}]]
          - Fn::FindInMap: [ CIDRGen, Public, Subnet1 ]
      AvailabilityZone: !Select 
        - '0'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: {"Fn::Join" : [" ", [{"Ref" : "VPCName"}, "Public subnet 1"]]}
        - Key: Network
          Value: Public
      MapPublicIpOnLaunch: true
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Join
        - '.'
        - - !Select ["0", !Split [".", {"Ref" : "VPCCIDR"}]]
          - !Select ["1", !Split [".", {"Ref" : "VPCCIDR"}]]
          - { "Fn::FindInMap" : [ "CIDRGen", "Public", "Subnet2" ] }
      AvailabilityZone: !Select 
        - '1'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: {"Fn::Join" : [" ", [{"Ref" : "VPCName"}, "Public subnet 2"]]}
        - Key: Network
          Value: Public
      MapPublicIpOnLaunch: true
  PrivateSubnet1ARouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: {"Fn::Join" : [" ", [{"Ref" : "VPCName"}, "Private subnet 1A"]]}
        - Key: Network
          Value: Public
  PrivateSubnet1ARoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateSubnet1ARouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1
  PrivateSubnet1ARouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet1A
      RouteTableId: !Ref PrivateSubnet1ARouteTable
  PrivateSubnet2ARouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: {"Fn::Join" : [" ", [{"Ref" : "VPCName"}, "Private subnet 2A"]]}
        - Key: Network
          Value: Public    
  PrivateSubnet2ARoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateSubnet2ARouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway2 
  PrivateSubnet2ARouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet2A
      RouteTableId: !Ref PrivateSubnet2ARouteTable
  PublicSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: {"Fn::Join" : [" ", [{"Ref" : "VPCName"}, "Public Subnets"]]}
        - Key: Network
          Value: Public
  PublicSubnetRoute:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicSubnetRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicSubnetRouteTable
  NAT1EIP:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NAT2EIP:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NATGateway1:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt 
        - NAT1EIP
        - AllocationId
      SubnetId: !Ref PublicSubnet1
  NATGateway2:
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt 
        - NAT2EIP
        - AllocationId
      SubnetId: !Ref PublicSubnet2
  S3VPCEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: '*'
            Effect: Allow
            Resource: '*'
            Principal: '*'
      RouteTableIds:
        - !Ref PrivateSubnet1ARouteTable
        - !Ref PrivateSubnet2ARouteTable
      ServiceName: !Join
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .s3
      VpcId: !Ref VPC
Outputs:
  NAT1EIP:
    Description: NAT 1 IP address
    Value: !Ref NAT1EIP
    Export:
      Name: !Sub '${VPCName}-NAT1EIP'
  NAT2EIP:
    Description: NAT 2 IP address
    Value: !Ref NAT2EIP
    Export:
      Name: !Sub '${VPCName}-NAT2EIP'
  PrivateSubnet1AID:
    Description: Private subnet 1A ID in Availability Zone 1
    Value: !Ref PrivateSubnet1A
    Export:
      Name: !Sub '${VPCName}-PrivateSubnet1AID'
  PrivateSubnet2AID:
    Description: Private subnet 2A ID in Availability Zone 2
    Value: !Ref PrivateSubnet2A
    Export:
      Name: !Sub '${VPCName}-PrivateSubnet2AID'
  PublicSubnet1ID:
    Description: Public subnet 1 ID in Availability Zone 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${VPCName}-PublicSubnet1ID'
  PublicSubnet2ID:
    Description: Public subnet 2 ID in Availability Zone 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${VPCName}-PublicSubnet2ID'
  S3VPCEndpoint:
    Description: S3 VPC Endpoint
    Value: !Ref S3VPCEndpoint
    Export:
      Name: !Sub '${VPCName}-S3VPCEndpoint'
  PrivateSubnet1ARouteTable:
    Value: !Ref PrivateSubnet1ARouteTable
    Description: Private subnet 1A route table
    Export:
      Name: !Sub '${VPCName}-PrivateSubnet1ARouteTable'
  PrivateSubnet2ARouteTable:
    Value: !Ref PrivateSubnet2ARouteTable
    Description: Private subnet 2A route table
    Export:
      Name: !Sub '${VPCName}-PrivateSubnet2ARouteTable'
  PublicSubnetRouteTable:
    Value: !Ref PublicSubnetRouteTable
    Description: Public subnet route table
    Export:
      Name: !Sub '${VPCName}-PublicSubnetRouteTable'
  VPCCIDR:
    Value: !Ref VPCCIDR
    Description: VPC CIDR
    Export:
      Name: !Sub '${VPCName}-VPCCIDR'
  VPCID:
    Value: !Ref VPC
    Description: VPC ID
    Export:
      Name: !Sub '${VPCName}-VPCID'

